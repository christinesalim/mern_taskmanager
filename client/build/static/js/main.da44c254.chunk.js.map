{"version":3,"sources":["history.js","actions/types.js","api/index.js","config/config.js","actions/index.js","components/Auth.js","images/blank-profile-picture.png","components/fileupload/FileUpload.js","components/Home.js","components/taskmanager/Task.js","components/taskmanager/TaskCreateForm.js","components/taskmanager/TaskManager.js","Header.js","components/App.js","reducers/authReducer.js","reducers/taskReducer.js","reducers/avatarReducer.js","reducers/index.js","index.js"],"names":["createBrowserHistory","SIGN_IN","SIGN_OUT","LOAD_USER","CREATE_TASK","DELETE_TASK","EDIT_TASK","FETCH_TASKS","UPLOAD_AVATAR_COMPLETED","GET_AVATAR_RESPONSE_RECEIVED","DELETED_AVATAR_FILE","UPLOAD_AVATAR_REQ_RECEIVED","UPLOAD_AVATAR_ERROR","GET_AVATAR_ERROR","API","axios","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","jwtToken","signUp","formData","post","signIn","googleSignIn","token","console","log","createTask","task","editTask","id","patch","deleteTask","delete","sendAvatarFile","getAvatarFile","get","responseType","dispatch","a","api","data","type","payload","history","push","response","imageURL","URL","createObjectURL","status","initialState","firstName","lastName","email","password","confirmPassword","Auth","useDispatch","useState","form","setForm","formErrors","setFormErrors","isSignUp","setIsSignup","showPassword","setShowPassword","isSubmitting","setIsSubmitting","handleChange","e","target","name","value","submitForm","useCallback","useEffect","Object","keys","length","googleSuccess","res","tokenId","passwordFieldType","className","Form","Field","Input","placeholder","error","content","pointing","onChange","icon","Icon","link","onClick","Button","preventDefault","errors","test","validateForm","clientId","render","renderProps","onSuccess","onFailure","alert","cookiePolicy","prevIsSignUp","FileUpload","avatarFile","setAvatarFile","fileName","setFileName","message","setMessage","uploadStatus","useSelector","state","avatar","uploadedFileName","Label","InputFile","input","files","file","size","checkFileSize","primary","FormData","append","uploadAvatarFile","Home","isSignedIn","auth","user","userData","databaseAvatarInfo","useRef","confirmOpen","setConfirmOpen","getAvatar","_id","getLatestAvatar","current","prevFile","fileUploaded","revokeObjectURL","deleteAvatar","Grid","divided","Row","columns","Column","width","Image","src","alt","Popup","trigger","Confirm","open","header","onCancel","onConfirm","Item","emptyProfile","circular","Task","props","handleDelete","bind","handleEdit","handleTaskUpdate","handleCompleted","toggleForm","description","isEditing","this","setState","completed","onSubmit","List","Checkbox","checked","Component","connect","TaskCreateForm","handleSubmit","label","disabled","TaskManager","retrievedTasks","tasks","setTasks","displayedTasks","setDisplayedTasks","prevSignedInStatus","fetchDatabaseTasks","getTasksToRender","toggleCompleted","updatedTasks","map","tasksToDisplay","Message","Header","to","secondary","as","Link","App","path","exact","component","INITIAL_STATE","authReducer","action","setItem","stringify","clear","taskReducer","t","filter","deleteStatus","AvatarReducer","playload","combineReducers","avatarReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.da44c254.chunk.js","sourcesContent":["//Manage history ourselves to do programmatic navigation\n//Use this history object in <Router> component and manage\n//navigation between pages by calling history.push()\nimport { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","//List of valid action creators\n\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const LOAD_USER = 'LOAD_USER';\nexport const CREATE_TASK = 'CREATE_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const EDIT_TASK = 'EDIT_TASK';\nexport const FETCH_TASKS = 'FETCH_TASKS';\nexport const UPLOAD_AVATAR_COMPLETED = 'UPLOAD_AVATAR_COMPLETED';\nexport const GET_AVATAR_RESPONSE_RECEIVED = 'GET_AVATAR_RESPONSE_RECEIVED';\nexport const DELETED_AVATAR_FILE = 'DELETED_AVATAR_FILE';\nexport const UPLOAD_AVATAR_REQ_RECEIVED = 'UPLOAD_AVATAR_REQ_RECEIVED';\nexport const UPLOAD_AVATAR_ERROR = 'UPLOAD_AVATAR_ERROR';\nexport const GET_AVATAR_ERROR = 'GET_AVATAR_ERROR';\n\n","import axios from 'axios';\nimport { baseUrl } from '../config/config';\n\n//Fix this later: TODO\nconst API = axios.create({ baseURL: baseUrl });\n\n\n\n//Intercept all requests sent to backend API and add the Bearer token\nAPI.interceptors.request.use((req) => {\n  \n  //Do we have JWT token \n  if(localStorage.getItem('taskmanager')){\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('taskmanager')).jwtToken}`;\n    \n  }\n  return req;\n})\n\n//Creates a user\nexport const signUp = (formData) => {\n  return API.post('/users', formData);\n}\n\n//Logs in existing user\nexport const signIn = (formData) => {\n  return API.post('/users/login', formData);\n}\n\n//Log in Google user\nexport const googleSignIn = (token) => {\n  console.log(\"Sending google token to backend\", token);\n  return API.post('/users/googlelogin', token);\n}\n\n//Signout the user\nexport const signOut = () => {\n  console.log(\"Signing out user on backend\");\n  return API.post('/users/logout');\n}\n\n//Get list of tasks\nexport const fetchTasks = () => {\n  console.log(\"Sending request to fetch tasks\");\n  return API.get('/tasks');\n}\n\n//Create a task in the database\nexport const createTask = (task) => {\n  console.log(\"Sending request to create task\");\n  return API.post('/tasks', task);\n}\n\n//Update a task in the database\nexport const editTask = (id, task) => {\n  console.log(\"Sending request to edit the task\");\n  return API.patch(`/tasks/${id}`, task);\n}\n\n//Delete a task in the database\nexport const deleteTask = (id) => {\n  console.log(\"Sending delete task request\");\n  return API.delete(`/tasks/${id}`);\n}\n\n//Send an avatar file to the backend for this user\nexport const sendAvatarFile = (formData) => {\n  console.log(\"Sending avatar file request\");  \n  return API.post('/users/me/avatar', formData, \n  {\n    headers: {'Content-Type': 'multipart/form-data'}\n  });   \n}\n\n//Get avatar from backend for this user\nexport const getAvatarFile = (id) => {\n  return API.get(`/users/${id}/avatar`, { responseType: 'blob'});\n}\n\n//Delete the avatar file from the backend database\nexport const deleteAvatarFile = () => {\n  return API.delete('/users/me/avatar');\n}","export const baseUrl = 'http://localhost:3000/';","import history from '../history';\n\nimport { \n  FETCH_TASKS, \n  CREATE_TASK, \n  SIGN_IN, \n  SIGN_OUT, \n  LOAD_USER, \n  EDIT_TASK, \n  DELETE_TASK, \n  UPLOAD_AVATAR_COMPLETED, \n  GET_AVATAR_RESPONSE_RECEIVED, \n  UPLOAD_AVATAR_REQ_RECEIVED,\n  DELETED_AVATAR_FILE,\n  UPLOAD_AVATAR_ERROR,\n  GET_AVATAR_ERROR\n} from './types';\nimport * as api from '../api/index.js';\n\n//Handle loading an existing user: we already have user's data\n//and token saved\nexport const loadUser = () => {\n  return { \n    type: LOAD_USER \n  };\n};\n\n\n//Action to handle user signing in\nexport const signIn = (formData) => async dispatch => {\n  try {\n    const { data } = await api.signIn(formData);\n\n    console.log(\"Sign in \", data);\n\n    dispatch({ type: SIGN_IN, payload: data });\n\n    history.push('/taskmanager');\n  }catch (error){\n    console.log(error);\n  }\n  \n};\n\n//Action to handle user signing in through google auth2\nexport const googleSignIn = (token) => async dispatch => {\n\n  try{\n    const { data } = await api.googleSignIn(token);\n    console.log(\"Google login data\", data);\n    dispatch({ type: SIGN_IN, payload: data });\n    history.push('/taskmanager');\n  } catch(error){\n    console.log(error);\n  }\n};\n\n//Action to handle user signing up\nexport const signUp = (formData) => async dispatch => {\n  try {\n    console.log(\"In signUp action creator\", formData);\n    const { data } = await api.signUp(formData);\n\n    dispatch({ type: SIGN_IN, payload: data });\n\n    history.push('/taskmanager');\n  }catch (error){\n    console.log(error);\n  }\n  \n};\n\n//Action to sign out the user\nexport const signOut = () => async dispatch => {\n\n  console.log(\"Action creator: Signing out user\");\n  await api.signOut();\n  dispatch ({ type: SIGN_OUT });\n  history.push('/');\n};\n\n\n//Get tasks from the backend database\nexport const fetchTasks = () => async dispatch =>  {\n  try {\n    console.log(\"About to fetch tasks\");\n    const response = await api.fetchTasks();\n    console.log(\"Fetched tasks\", response);\n\n    dispatch({ type: FETCH_TASKS, payload: response.data });\n  }catch (error){\n    console.log(error);\n  }\n}\n\n//Send a new task to the backend database\nexport const createTask = (task) => async dispatch => {\n  try{\n    console.log(\"Adding task to database\");\n    const response = await api.createTask(task);\n    console.log(\"Create task response\", response);\n    dispatch({ type: CREATE_TASK, payload: response.data });\n  }catch(error){\n    console.log(error);\n  }\n}\n\n//Edit an existing task in the backend database\nexport const editTask = (id, task) => async dispatch => {\n  try {\n    console.log(\"Editing task in database\", task);\n    const response = await api.editTask(id, task);\n    console.log(\"In editTask action response received:\", response);\n    dispatch({ type: EDIT_TASK, payload: response.data });\n  }catch(error){\n    console.log(error);\n  }\n}\n\n//Delete a task\nexport const deleteTask = (id) => async dispatch => {\n  try {\n    const response = await api.deleteTask(id);\n    dispatch({ type: DELETE_TASK, payload: response.data });\n\n  }catch (error){\n    console.log(error);\n  }\n}\n\n//Upload avatar file\nexport const uploadAvatarFile = (fileName, formData) => async dispatch => {\n  try {\n    dispatch({ type: UPLOAD_AVATAR_REQ_RECEIVED, payload: fileName });\n\n    const response = await api.sendAvatarFile(formData);\n    console.log(\"Response to avatar upload: \", response);\n    \n    dispatch({ type: UPLOAD_AVATAR_COMPLETED, payload: response.status });\n  }catch(error){\n    console.log(\"Error\", error.message);\n    dispatch({ type: UPLOAD_AVATAR_ERROR, payload: error });\n  }\n}\n\n//Get avatar file from backend\nexport const getAvatarFile = (id) => async dispatch => {\n  try {\n    const response = await api.getAvatarFile(id);\n    const imageURL = URL.createObjectURL(response.data);\n    \n    dispatch({ type: GET_AVATAR_RESPONSE_RECEIVED, payload: imageURL });\n  } catch(error){\n    console.log(error);\n    dispatch({ type: GET_AVATAR_ERROR, \n      payload: { \n        data: error?.response.data, \n        status: error?.response.status,\n      }});\n  }\n}\n\n//Delete avatar from backend\nexport const deleteAvatarFile = () => async dispatch => {\n  try {\n    const response = await api.deleteAvatarFile();\n    dispatch ({  type: DELETED_AVATAR_FILE, payload: response.status });\n\n  } catch (error){\n    console.log(error);\n  }\n}","import React, { useEffect, useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, Form, Icon} from 'semantic-ui-react';\nimport { signUp, signIn, googleSignIn } from '../actions';\n\nimport { GoogleLogin } from 'react-google-login';\nimport '../styles/Auth.css';\n\n\nconst initialState = { \n  firstName: '', \n  lastName: '', \n  email:'',\n  password:'',\n  confirmPassword: ''\n};\n\nconst Auth = () => {  \n  const dispatch = useDispatch();\n  const [form, setForm] = useState(initialState);\n  const [formErrors, setFormErrors] = useState({});\n  const [isSignUp, setIsSignup] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  const handleShowPassword = () => {    \n    setShowPassword(!showPassword);    \n  }\n\n  const switchMode = () => {\n    //Toggle between sign in and sign up\n    console.log(\"switchmode\");\n    setForm({ \n      firstName: '', \n      lastName: '', \n      email:'',\n      password:'',\n      confirmPassword: ''\n    });    \n   \n    setIsSignup( (prevIsSignUp) => !prevIsSignUp);\n    setShowPassword(false);\n    setIsSubmitting(false);\n    setFormErrors({});    \n    \n  }\n\n  const handleChange = (e) => {        \n    setForm({...form, \n    [e.target.name] : e.target.value});    \n  }\n\n  const validateForm = () => {\n    console.log(\"validateForm: isSubmitting\", isSubmitting)\n    const errors = {};\n  \n    //Signup form has additional fields to validate\n    if (isSignUp){\n\n      if (!form.firstName){\n        errors.firstName = \"Please enter a first name\";      \n      }\n      if (!form.lastName){\n        errors.lastName = \"Please enter a last name\";\n      }  \n\n      if (!form.confirmPassword || form.confirmPassword.length < 8){\n        errors.confirmPassword = \"Password must be at least 8 characters\";\n      }  \n  \n      if (form.password !== form.confirmPassword){\n        errors.confirmPassword = \"Passwords must match\"\n      }\n    }\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n    if (!form.email){\n      errors.email = \"Please enter an email\";\n    }else if (!regex.test(form.email)){\n      errors.email = \"Please enter a valid email\";      \n    }\n\n    if (!form.password || form.password.length < 8){\n      errors.password = \"Password must be at least 8 characters\";\n    }     \n    return errors;\n  } \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    //Validate the form and indicate user clicked submit\n    setFormErrors(validateForm());\n    setIsSubmitting(true);   \n  }\n\n  //If no errors, we dispatch the form\n  //useCallback is used to avoid re-creating this function on every render\n  const submitForm = useCallback(() => {\n    if (isSignUp){\n      dispatch(signUp(form));\n    }else{\n      dispatch(signIn(form));\n    }\n  },[form, isSignUp, dispatch]);\n  \n\n  useEffect(()=> {    \n    \n    if ( isSubmitting && Object.keys(formErrors).length === 0){\n      console.log(\"isSubmitting\", isSubmitting);\n      submitForm();\n    }\n  },[formErrors, isSubmitting, submitForm]);\n  \n  const googleSuccess = async (res) => {    \n    const token = res?.tokenId;    \n    try {\n      //Send token object from google oauth2 to our backend\n      dispatch(googleSignIn({token}));      \n    } catch(e){\n      console.log(e);\n    }\n  }\n\n  const googleError = (e) => {\n    console.log(\"Google error: \", e);\n    alert('Google Sign In was unsuccessful. Try again later');\n  }\n\n  const passwordFieldType = `${showPassword? \"input\" : \"password\"}`;\n  \n  console.log(\"Before return formdata\", form);\n\n  return(\n    \n    <div className=\"SignUp \">      \n      <Form >       \n        { isSignUp && (\n          <>\n            <Form.Field>     \n              < Form.Input       \n                id=\"firstName\"\n                name=\"firstName\" \n                type=\"text\" \n                placeholder=\"First Name\"\n                error={formErrors.firstName ? {\n                  content: formErrors.firstName,\n                  pointing: 'below'\n                }: null}\n                value={form.firstName}\n                onChange={handleChange}              \n              />\n            </Form.Field> \n              <Form.Input \n                id=\"lastName\"\n                name=\"lastName\" \n                type=\"text\" \n                placeholder=\"Last Name\"\n                error={formErrors.lastName ? \n                  {\n                    content: formErrors.lastName,\n                    pointing: 'below'\n                  }: null \n                }\n                value={form.lastName}\n                onChange={handleChange}\n              />\n            <Form.Field/>\n         </>\n        )}\n       <Form.Field>            \n        <Form.Input           \n          className=\"ui input email\"\n          id=\"email\"\n          name=\"email\" \n          type=\"text\" \n          placeholder=\"Email\"\n          error={formErrors.email ? \n            {\n              content: formErrors.email,\n              pointing: 'right'\n            }: null \n          }\n          value={form.email}\n          onChange={handleChange}\n          \n        />                \n        </Form.Field>\n\n        <Form.Field>  \n          <Form.Input \n            icon={\n              <Icon \n                name={showPassword? 'eye slash' : 'eye'}\n                link\n                onClick={handleShowPassword}\n              />\n            }\n            id=\"password\"\n            name=\"password\" \n            type={passwordFieldType}\n            onChange={handleChange}\n            error={formErrors.password ? \n              {\n                content: formErrors.password,\n                pointing: 'below'\n              }: null \n            }\n            placeholder=\"Password\"              \n            value={form.password}\n          />                  \n        </Form.Field>\n        { isSignUp && (\n          <>        \n            <Form.Field>  \n              <Form.Input \n                id=\"confirmPassword\"\n                name=\"confirmPassword\" \n                type={passwordFieldType}\n                onChange={handleChange}\n                error={formErrors.confirmPassword ? \n                  {\n                    content: formErrors.confirmPassword,\n                    pointing: 'below'\n                  }: null \n                }\n                placeholder=\"Confirm Password\"\n                value={form.confirmPassword}\n              />        \n            </Form.Field>\n          </>\n        )}\n        <div className=\"SignUp-SignUpButton\">          \n        <Button className='fluid ui button' type=\"submit\" onClick={handleSubmit}>{isSignUp ? 'Sign Up' : 'Sign In'}\n        </Button>\n        </div>\n        <div className=\"ui horizontal divider\">\n        Or\n        </div>\n        <div className=\"SignUp-SignInButton\">\n        <GoogleLogin\n          clientId = '202556023160-uglkeodct8n1ctvrotf5pn4v2nomshdl.apps.googleusercontent.com'\n          render={ (renderProps) => (\n            <Button className=\"ui google button primary\"\n              onClick={renderProps.onClick}>\n              <i className=\"google icon\"/>\n              Google Sign In\n            </Button>          \n          )}\n          onSuccess = {googleSuccess}\n          onFailure = {googleError}\n          cookiePolicy=\"single_host_origin\"\n        />\n\n          \n        <Button onClick={switchMode} className=\"ui basic button\">\n          { isSignUp ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n        </Button>\n        </div>\n\n\n      </Form>\n    </div>\n  );\n}\n\nexport default Auth;\n  ","export default __webpack_public_path__ + \"static/media/blank-profile-picture.2fda6558.png\";","import React, { useEffect, useState }from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button, Label } from 'semantic-ui-react';\nimport { InputFile } from 'semantic-ui-react-input-file';\nimport { uploadAvatarFile } from '../../actions';\n\nconst MAX_FILE_SIZE = 500000;\n\nconst FileUpload = () => {\n  const dispatch = useDispatch();\n  const [avatarFile, setAvatarFile] = useState(null);\n  const [fileName, setFileName] = useState('Upload an image for your profile');\n  const [message, setMessage] = useState('');\n  const uploadStatus = useSelector( state => state.avatar.uploadStatus);\n  const uploadedFileName = useSelector( state=> state.avatar.fileName);\n\n  useEffect( () => {\n    console.log(\"New upload status: \", uploadStatus);\n    if (uploadStatus === 200){\n      //setMessage(\"File uploaded successfully\");\n      setAvatarFile(null);\n    } else if (uploadStatus === 400){\n      setMessage(\"Sorry, the file upload had a problem\");\n    } else {\n      setMessage(\"\");\n    }\n  }, [uploadStatus, uploadedFileName]); \n\n  useEffect( () => {\n    if (!uploadedFileName){\n      setFileName('Upload an image for your profile');\n    }\n\n  },[uploadedFileName]);\n  \n  const checkFileSize = (e) => {\n    let file = e.target.files[0];\n    return file?.size > MAX_FILE_SIZE ? false : true;\n  }\n\n  const handleFileSelection = (e) => {\n    console.log(\"Upload this file\", e.target.files);\n    if (checkFileSize (e)){      \n      setAvatarFile(e.target.files[0]);\n      setFileName(e.target.files[0]?.name);\n      console.log(\"file name\", fileName);\n      setMessage(\"Click the Upload button to begin upload.\");\n    } else {\n      setAvatarFile(null);\n      setFileName('Upload an image for your profile:');\n      setMessage(\"File too large. Please select a smaller file to upload\");\n    }\n  }\n\n  const handleUpload = (e) => {\n\n    console.log(\"uploading file\", avatarFile?.name);\n    setMessage(\"\");\n    const formData = new FormData();\n    //This string 'avatar' has to match the multer setting for the post request handler for upload.single('avatar')\n    formData.append('avatar', avatarFile);\n    dispatch(uploadAvatarFile(fileName, formData));\n\n  }\n\n  return ( \n    <>\n      <Form>\n        <Label>{fileName}</Label>\n        <InputFile            \n          input={{\n            id: 'avatar-file-id',\n            onChange: handleFileSelection            \n          }}\n        />\n      {\n        avatarFile && \n        <Button primary onClick={handleUpload}>Upload</Button>\n      }\n      </Form>\n      <p>{message}</p>\n    </>\n  );\n\n};\n\nexport default FileUpload;","import React, { useEffect, useCallback, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Popup, Item, Grid, Icon, Image, Confirm } from 'semantic-ui-react';\n\nimport Auth from './Auth';\nimport '../styles/Home.css';\nimport emptyProfile from '../images/blank-profile-picture.png';\nimport FileUpload from './fileupload/FileUpload';\nimport { getAvatarFile, deleteAvatarFile } from '../actions';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const isSignedIn = useSelector( (state) => state.auth.isSignedIn);\n  const user = useSelector( (state) => state.auth.userData);\n  const databaseAvatarInfo = useSelector( state => state.avatar );\n  const avatarFile = useRef(databaseAvatarInfo?.file);\n  const [ confirmOpen, setConfirmOpen ] = useState(false);\n  \n  const getAvatar = useCallback(()=> {\n    dispatch(getAvatarFile(user.user._id));\n  },[user?.user._id, dispatch]);\n\n  useEffect ( () => {   \n      if (user){\n        console.log(\"User data changed. Getting avatar for this user\");          \n        getAvatar();\n      }    \n  }, [user, getAvatar]);\n\n\n  const getLatestAvatar = useCallback(() => {\n    console.log(\"*****Avatar was uploaded. Get avatar for this user\");\n    dispatch(getAvatarFile(user.user._id));\n  },[user?.user._id, dispatch]);\n\n  //Update the reference to the avatar file blob so it can be freed\n  useEffect(() => {\n    avatarFile.current = databaseAvatarInfo.file;\n  });\n  \n  //Get avatar after a new file is uploaded\n  useEffect( () => {\n    const prevFile = avatarFile.current;\n    \n    //console.log(\"Did new file upload?\", databaseAvatarInfo.fileUploaded);\n    if (user && databaseAvatarInfo.fileUploaded){\n      //dispatch(getAvatarFile(user.user._id));\n      console.log(\"Sending request to get user's avatar\");\n      getLatestAvatar();\n    }\n\n    //Clean up function to delete previous file\n    return () => {\n      console.log(\"revokeObjectURL\", prevFile);    \n      URL.revokeObjectURL(prevFile);      \n    }\n  },[user, databaseAvatarInfo?.fileUploaded, getLatestAvatar])\n\n  const deleteAvatar = () => {\n    console.log(\"Delete the profile\");\n    dispatch(deleteAvatarFile());\n  }  \n\n  const showDeleteAvatarModal = () => {\n    setConfirmOpen(true);\n  }\n\n  const handleAvatarDeleteCancel = () => {\n    setConfirmOpen(false);\n  }\n\n  const handleAvatarDeleteConfirm = () => {\n    deleteAvatar();\n    setConfirmOpen(false);\n  }\n\n  return (\n  <div className=\"Home\">\n    { isSignedIn && (\n      <>\n      <h1 className=\"Home-h1\">Welcome {user?.user?.firstName}!</h1>\n      <Grid divided='vertically'>\n        <Grid.Row columns={2}>\n          <Grid.Column width={2}>\n          {databaseAvatarInfo.file? \n              \n                <div className=\"Home-Icons\">\n                  <Image \n                    size=\"tiny\" \n                    src={databaseAvatarInfo.file} \n                    alt=\"avatar\" \n                    \n                  /> \n                  <Popup content='Delete avatar'\n                    trigger={\n                      <Icon \n                        size=\"large\"\n                        link  \n                        name='delete'                     \n                        onClick={showDeleteAvatarModal}\n                      />\n                    }\n                  />\n                  <Confirm\n                    className='Home-Modal'\n                    open={confirmOpen}\n                    header='Do you want to delete your avatar image?'\n                    onCancel={handleAvatarDeleteCancel}\n                    onConfirm={handleAvatarDeleteConfirm}\n                  />\n                </div>\n                \n              : \n              <Item> <Item.Image size=\"small\" src={emptyProfile} alt=\"no avatar\" circular/></Item> \n              }     \n          </Grid.Column>\n          <Grid.Column width={6}>\n            <FileUpload id={user?.user._id}/> \n          </Grid.Column>       \n        </Grid.Row>      \n      </Grid>\n      </>)\n    }\n    { !isSignedIn && (\n      <>        \n        <Auth />\n      </>)\n    }\n    <p className='Home-Footer'>{'\\u00A9'} Christine S. 2021. Built with MongoDB, Express, React and Node.js</p>\n  </div>);\n};\n\nexport default Home;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Checkbox, List, Icon } from 'semantic-ui-react';\nimport { editTask, deleteTask } from '../../actions/index';\nimport '../../styles/Task.css';\n\nclass Task extends Component {\n  constructor(props){\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleTaskUpdate = this.handleTaskUpdate.bind(this);\n    this.handleCompleted = this.handleCompleted.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.state = { description: this.props.description, isEditing: false};\n  }\n\n  handleDelete(){\n    //Dispatch action to delete the task\n    this.props.deleteTask(this.props.id);\n    \n  }\n\n  handleEdit(){      \n    this.toggleForm();\n  }\n\n  toggleForm(){\n    this.setState({isEditing : !this.state.isEditing});\n  }\n\n  handleChange(e){\n    this.setState({\n      [e.target.name] : e.target.value \n    });    \n  }\n\n  handleTaskUpdate(){\n    \n    //Dispatch action creator to edit the task \n    const task = {      \n      description: this.state.description, \n      completed: this.props.completed\n    };\n    console.log(\"Task component handleTaskUpdate: \", task);\n    this.props.editTask(this.props.id, task);\n\n    this.toggleForm();\n  }\n\n  handleCompleted(){\n    console.log(\"Completed clicked\");\n    const task = {\n      description: this.state.description,\n      completed: !this.props.completed //toggle the completed status\n    }\n    this.props.editTask(this.props.id, task);\n  }\n\n  render(){\n    let result;\n  \n    if (this.state.isEditing){\n      result = <div>\n        <Form onSubmit={this.handleTaskUpdate} className=\"Task-edit-form\">\n          <Form.Input\n            className=\"Task-edit-input\"\n            value={this.state.description}  \n            onChange={this.handleChange}\n            name=\"description\"\n          ></Form.Input>\n          <div className=\"Task-save-button\">\n            <Button  size=\"mini\" icon type=\"submit\">\n              <Icon name=\"save\" />\n            </Button>\n          </div>\n        </Form>\n      </div>;      \n    }else {\n      result = <div className=\"Task\">\n      <List.Item className={`Task-li ${this.props.completed? 'Task-completed':''} `} >\n        <Checkbox \n          className=\"Task-checkbox\" \n          checked={this.props.completed}\n          onClick={this.handleCompleted}            \n        />\n        {this.state.description}\n        <div className=\"Task-buttons\">          \n          <Button size=\"mini\" icon onClick={this.handleEdit}>\n            <Icon name=\"edit\" />\n          </Button>\n          <Button size=\"mini\" icon onClick={this.handleDelete}>\n            <Icon name=\"trash\" />\n          </Button>\n        </div>\n      </List.Item>\n      </div>\n    }\n\n    return result;         \n  }\n\n};\n\nexport default connect (null, {editTask, deleteTask})(Task);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createTask } from '../../actions/index';\nimport { Form, Button } from 'semantic-ui-react';\nimport '../../styles/TaskCreateForm.css';\n\nclass TaskCreateForm extends Component {\n  constructor(props){\n    super(props);\n    //Properties of a task\n    this.state = {\n      description: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n \n\n  handleSubmit = async(e) => {\n    e.preventDefault();\n       \n    //Generate action creator to create this new task\n    this.props.createTask({ ...this.state, completed: false });\n\n    this.setState({description: \"\"});\n   \n  }\n\n  handleChange(e){\n    this.setState({[e.target.name] : e.target.value});    \n  } \n    \n  render(){\n    return (      \n      <Form onSubmit={this.handleSubmit}>\n        <div className=\"TaskCreateForm\" >\n          <Form.Input\n            className=\"TaskCreateForm-input\"\n            label=\"New Task\"\n            id=\"description\"\n            name=\"description\" \n            type=\"text\" \n            value={this.state.description}\n            onChange={this.handleChange}            \n            />\n          <Button \n            className=\"TaskCreateForm-submit\" \n            type=\"submit\" \n            value=\"Submit\"\n            disabled={!this.state.description}\n          >\n          Add\n          </Button>\n        </div>\n      </Form>\n  \n      \n    );\n  }\n}\n\n\n\nexport default connect(null, {createTask})(TaskCreateForm);","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { List, Image, Message } from 'semantic-ui-react';\nimport Task from './Task';\nimport emptyProfile from '../../images/blank-profile-picture.png';\nimport { fetchTasks, getAvatarFile } from '../../actions/index';\nimport TaskCreateForm from './TaskCreateForm';\nimport '../../styles/TaskManager.css';\n\nconst TaskManager = () => {\n  const dispatch = useDispatch();\n  //Data from redux store\n  const user = useSelector( (state) => state.auth.userData);\n  const isSignedIn = useSelector( state => state.auth.isSignedIn);\n  const retrievedTasks = useSelector( state => state.tasks.tasks );\n  const databaseAvatarInfo = useSelector( state => state.avatar );\n  \n  //Local copy of user modified tasks\n  const [tasks, setTasks] =  useState([]);\n  const [displayedTasks, setDisplayedTasks] = useState([]);\n  const prevSignedInStatus = useRef(false);\n\n  console.log(\"****TaskManager: user\", user);\n\n  const getAvatar = useCallback(()=> {\n    console.log(\"***getAvatar() for user\", user?.user._id);\n    dispatch(getAvatarFile(user?.user._id));\n  },[user?.user._id, dispatch]);\n\n  //If we don't yet have the avatar, get it from the database\n  useEffect ( () => {   \n    console.log(\"****TaskManager: databaseAvatarInfo\", databaseAvatarInfo);\n    \n    if (!databaseAvatarInfo?.file && user){\n      console.log(\"****TaskManager Getting avatar for this user\");          \n      getAvatar();\n    }  \n    else {\n      console.log(\"Already have file\", databaseAvatarInfo.file);\n    }  \n  //}, [user?.user._id, databaseAvatarInfo, getAvatar]);\n  }, [user]);\n\n  const fetchDatabaseTasks = useCallback( () => {\n    //Get the user's tasks from the database\n    dispatch(fetchTasks());\n  },[dispatch]);  \n\n  //Returns the tasks to render\n  const getTasksToRender = useCallback( () => {\n    //Toggle the task with the id specified   \n    const toggleCompleted =  (id) => {\n      const updatedTasks = tasks.map(task => {\n        if (task.id ===id){\n          return { ...task, completed: !task.completed};\n        } else {\n          return task;\n        }\n      });\n      setTasks(updatedTasks);\n    }\n\n    if(tasks){\n      return tasks.map( task => {\n        return (\n          <Task className='TaskManager-Task'\n            key={task._id} \n            id={task._id} \n            description={task.description}\n            completed={task.completed}             \n            toggleCompleted={toggleCompleted}\n          />\n        );\n      });\n    }\n  },[tasks] );\n       \n  //Get tasks if user just signed in\n  useEffect ( () => {\n    console.log(\"Task Manager useEffect prevSignedInStatus\", prevSignedInStatus);\n    \n    //Sign in status changed from false to true so get this\n    //user's tasks\n    if (!prevSignedInStatus.current && isSignedIn){\n      console.log(\"TaskManager useEffect: user is NOW signed in! Fetching tasks\");\n      fetchDatabaseTasks();    \n     \n    }\n\n    //Save the current sign in status\n    prevSignedInStatus.current = isSignedIn;\n    console.log(\"Task Manager useEffect UPDATING prevSignedInStatus\", prevSignedInStatus);\n  },[isSignedIn, fetchDatabaseTasks]);\n\n  //Update rendered tasks when the state store changes\n  useEffect (() => {\n    //Update our local copy of the tasks\n    setTasks(retrievedTasks);\n\n    //Update the list of tasks rendered based on the new list    \n    let tasksToDisplay = getTasksToRender (retrievedTasks)\n    console.log(\"TaskManager useEffect tasksToDisplay:\", tasksToDisplay);\n    setDisplayedTasks(tasksToDisplay);\n    \n  }, [retrievedTasks, getTasksToRender]); \n  \n\n  return (\n    <div>\n      { user ? (\n        <>\n          <div className=\"TaskManager\">\n            <div className=\"TaskManager-Heading\">\n              {databaseAvatarInfo.file? \n                <Image src={databaseAvatarInfo.file} alt=\"avatar\" avatar/> : \n                <Image src={emptyProfile} alt=\"no avatar\" avatar/> \n              }     \n              <span className=\"TaskManager-Title\">My Tasks</span>\n            </div>\n            <List>          \n              {displayedTasks}\n            </List>\n            <TaskCreateForm />   \n          </div>\n        </> )  :\n        (\n          <Message>Please log in or sign up to view and manage your tasks.</Message>\n        )\n      }\n    </div>\n  );\n}\n\n\nexport default TaskManager;","import React, { useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'semantic-ui-react';\nimport { signOut, loadUser } from './actions';\n\n\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const isSignedIn = useSelector( (state) => state.auth.isSignedIn);\n  const user = useSelector( (state) => state.auth.userData);\n  console.log(\"Header User logged in is: \", user);\n  console.log(\"Header isSignedIn\", isSignedIn);\n  \n  \n  //If user has a token then consider them signed in when app first starts up\n  useEffect(() => {\n    console.log(\"Header dispatching loadUser\");\n    dispatch(loadUser()); //action creator\n  },[dispatch]);\n\n\n\n  const handleSignOut = () => {\n    if (isSignedIn){\n      try {\n        //Signout the user\n        console.log(\"Header signing out user\");\n        dispatch(signOut());\n      } catch (e){\n        console.log(e);\n      }\n    }\n  }\n\n  return (\n    <div className=\"ui secondary pointing menu\">\n      <Link to=\"/\" className=\"item\">\n        TaskManager\n      </Link>\n      <div className=\"right menu\">\n        <Link to=\"/taskmanager\" className=\"item\">\n          All Tasks\n        </Link>\n        {\n          isSignedIn ? \n            <Button secondary onClick={handleSignOut}>\n            Sign Out\n            </Button>\n            :\n            <Button as={Link} to='/auth' primary>\n              Log In\n            </Button>\n        }\n       \n      </div>\n    </div>\n  );\n};\n\nexport default Header;","import { Router, Route } from 'react-router-dom';\nimport Auth from './Auth';\nimport Home from './Home';\nimport TaskManager from './taskmanager/TaskManager';\nimport Header from '../Header';\nimport history from '../history';\n\nfunction App() {\n  return (\n    <div className=\"ui container\">\n      <Router history={history}>\n        <div>\n          <Header />\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/auth\" exact component={Auth} />\n          <Route path=\"/taskManager\" exact component={TaskManager} />         \n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { SIGN_IN, SIGN_OUT, LOAD_USER } from '../actions/types';\n\nconst  INITIAL_STATE = {\n  isSignedIn: null,\n  userData: null\n};\n\nconst authReducer = ( state = INITIAL_STATE, action) => {\n  \n  switch(action.type) {\n    case SIGN_IN: \n      //create new state object, with existing values copied\n      // and add the isSignedIn state\n      console.log(\"authReducer: user signed in successfully\");\n\n      console.log(\"Stored user token: \", action.payload.token);\n\n      //Save the user's token in local storage\n      localStorage.setItem('taskmanager', JSON.stringify(action.payload));\n      \n      return { ...state, isSignedIn: true, userData: action.payload};\n\n    case LOAD_USER:\n      console.log(\"Load user in authReducer\");\n      //Get a user's token in local storage\n      const user = JSON.parse(localStorage.getItem('taskmanager'));\n      console.log(\"loaded user\", user);\n      state.isSignedIn = user ? true : false;\n      \n      return { ...state, userData: user};\n    \n   \n    case SIGN_OUT:\n      console.log(\"Signed out user in authReducer\");\n      localStorage.clear();\n      return { ...state, isSignedIn: false, userData: null };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","import { FETCH_TASKS, CREATE_TASK, EDIT_TASK, DELETE_TASK, SIGN_OUT} from '../actions/types';\n\nconst INITIAL_STATE = {\n  tasks: null\n};\n\nconst taskReducer = ( state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case CREATE_TASK: \n      //this new task was just added to the backend database\n      console.log(\"In CREATE_TASK reducer\", action.payload);\n      //Add the task to the tasks array\n      return { ...state, tasks: [...state.tasks, action.payload] }\n\n    case EDIT_TASK:\n      //Edit an exisiting task in the database\n      console.log(\"In EDIT_TASK reducer\", action.payload);\n      return { ...state, \n        tasks: state.tasks.map(\n          t => (t._id === action.payload._id ? action.payload : t))};\n\n    case DELETE_TASK:\n      //Delete a task from the database\n      console.log(\"In DELETE_TASK reducer\", action.payload);\n      //Remove the deleted task from the state\n      return {...state,\n        tasks: state.tasks.filter(t => t._id !== action.payload._id)\n      };\n\n    case FETCH_TASKS: \n      //create new state object, with existing values copied\n      // and add the isSignedIn state\n      console.log('In FETCH_TASKS reducer', action.payload);\n      return { ...state, tasks: action.payload}\n\n    case SIGN_OUT: \n      console.log(\"Deleting tasks from signing out\");\n      return { ...state, tasks: null };\n    default:\n      return state;\n  }\n};\n\nexport default taskReducer;\n    ","import { \n  UPLOAD_AVATAR_COMPLETED, \n  GET_AVATAR_RESPONSE_RECEIVED, \n  DELETED_AVATAR_FILE,\n  UPLOAD_AVATAR_REQ_RECEIVED,\n  UPLOAD_AVATAR_ERROR,\n  GET_AVATAR_ERROR\n} from '../actions/types';\n\nconst INITIAL_STATE = {\n  fileName: null,\n  file: null,\n  fileUploaded: false,\n  uploadStatus: null,\n  deleteStatus: null,\n  error: null\n};\n\nconst AvatarReducer = ( state = INITIAL_STATE, action) => {\n  \n    switch(action.type) {\n      case UPLOAD_AVATAR_REQ_RECEIVED:\n        console.log(\"UPLOAD_AVATAR_REQ_RECEIVED for file\", action.payload);\n        return{ ...state, fileName: action.payload, fileUploaded: false };\n      case UPLOAD_AVATAR_COMPLETED:\n        console.log(\"UPLOAD_AVATAR_COMPLETED reducer \");\n        return { ...state, fileUploaded: true, uploadStatus: action.payload};\n      case UPLOAD_AVATAR_ERROR:\n        console.log(\"UPLOAD_AVATAR_ERROR\", action.payload);\n        return { ...state, error: action.payload };\n      case GET_AVATAR_RESPONSE_RECEIVED:\n        console.log(\"GET_AVATAR_RESPONSE_RECEIVED reducer \", action.payload);\n        return {...state, file: action.payload };\n        case GET_AVATAR_ERROR:\n          console.log(\"GET_AVATAR_ERROR\", action.payload);\n          return { ...state, error: action.payload };\n      case DELETED_AVATAR_FILE:\n        return { ...state, fileName: null, file: null, fileUploaded: false, deleteStatus: action.playload };\n      default:\n        return state;\n    }\n};\n\nexport default AvatarReducer;","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport taskReducer from './taskReducer';\nimport avatarReducer from './avatarReducer';\n\n//Store the state under keys named to identify the type of state\nexport default combineReducers( {\n  auth: authReducer, //sign in status\n  tasks: taskReducer, //task data\n  avatar: avatarReducer //avatar data\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport 'semantic-ui-css/semantic.min.css';\nimport './styles/index.css';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n//Configure for Redux dev tools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, \n  /* preloadedState, */ composeEnhancers(applyMiddleware(thunk)));\n//Add thunk middleware to the redux store\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}